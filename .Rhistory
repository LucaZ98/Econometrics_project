mod3 = auto.arima(df$EURUSD_vol[70:210], xreg = as.matrix(cbind(diff(df$MRO)[70:210]), df$vix[70:210]), d=0)
mod3
mod3 = auto.arima(df$EURUSD_vol[70:210], xreg = as.matrix(df[70:210, c("dMRO", "vix")]), d=0)
mod3
#Proviamo a tenere conto di questa cosa facendo prima una regressione sul vix (indice volatilità mercati finanziari)
#vediamo poi se i residui di questo modello sono spiegabili da cambi nell MRO
library(lmtest)
coeftest(mod3)
mod3 = auto.arima(df$EURUSD_vol[70:210], xreg = as.matrix(df[70:210, c( "vix")]), d=0)
mod3
coeftest(mod3)
#Se filtriamo la crisi del 2008, vediamo assenza di correlazione tra variazione di money supply, rieserve esterne e MRO
#mentre la correlazione con il vix rimane significativa
reg = dynlm( EURUSD_vol[70:210] ~ vix[70:210] + diff(MRO)[70:210] + diff(ExtRes)[70:210] + diff(M3)[70:210], data=df)
summary(reg)
acf(reg$residuals)
pacf(reg$residuals)
mod3 = auto.arima(df$EURUSD_vol[70:210], xreg = as.matrix(df[70:210, c( "vix")]), d=0)
mod3
plot(mod3)
acf(md3$residuals)
acf(mod3$residuals)
pacf(mod3$residuals)
pacf(df$EURUSD_vol)
acf(df$EURUSD_vol)
pacf(df$EURUSD_vol)
mod3 = Arima(df$EURUSD_vol[70:210], xreg= as.matrix(df[70:210, c( "vix")]), p=3, q=0, d=0)
help(Arima)
mod3 = Arima(df$EURUSD_vol[70:210], xreg= as.matrix(df[70:210, c( "vix")]), order=c(3,0,0))
mod3
mod3 = Arima(df$EURUSD_vol[70:210], xreg= as.matrix(df[70:210, c( "vix")]), order=c(3,0,0))
mod3
coeftest(mod3)
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix")]), order=c(3,0,0))
k=70
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix")]), order=c(3,0,0))
mod3
coeftest(mod3)
k=1
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix")]), order=c(3,0,0))
mod3
coeftest(mod3)
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(1,0,2))
mod3
coeftest(mod3)
mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
coeftest(mod3)
k=70
mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
coeftest(mod3)
k=70
mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix")]), d=0)
mod3
coeftest(mod3)
#Se filtriamo la crisi del 2008, vediamo assenza di correlazione tra variazione di money supply, rieserve esterne e MRO
#mentre la correlazione con il vix rimane significativa
k=70
reg = dynlm( EURUSD_vol[k:210] ~ vix[k:210] + diff(MRO)[k:210] + diff(ExtRes)[k:210] + diff(M3)[k:210], data=df)
summary(reg)
acf(reg$residuals)
pacf(reg$residuals)
reg = dynlm( EURUSD_vol[k:210] ~ vix[k:210] + diff(MRO)[k:210] , data=df)
summary(reg)
acf(reg$residuals)
pacf(reg$residuals)
acf(reg$residuals)
pacf(reg$residuals)
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(2,0,0))
mod3
coeftest(mod3)
acf(mod3$residuals)
pacf(mod3$residuals)
#Se filtriamo la crisi del 2008, vediamo assenza di correlazione tra variazione di money supply, rieserve esterne e MRO
#mentre la correlazione con il vix rimane significativa
k=1
reg = dynlm( EURUSD_vol[k:210] ~ vix[k:210] + diff(MRO)[k:210] , data=df)
summary(reg)
acf(reg$residuals)
pacf(reg$residuals)
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(5,0,0))
mod3
coeftest(mod3)
acf(mod3$residuals)
acf(mod3$residuals[1:208])
mod3$residuals
acf(mod3$residuals[2:210])
pacf(mod3$residuals[2:210])
mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
acf(mod3$residuals[2:210])
pacf(mod3$residuals[2:210])
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(5,0,0))
#mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
coeftest(mod3)
1 - mod$sigma2/var(df$EURUSD_vol)
1 - mod3$sigma2/var(df$EURUSD_vol)
acf(mod3$residuals[2:210])
pacf(mod3$residuals[2:210])
#Se filtriamo la crisi del 2008, vediamo assenza di correlazione tra variazione di money supply, rieserve esterne e MRO
#mentre la correlazione con il vix rimane significativa
k=70
reg = dynlm( EURUSD_vol[k:210] ~ vix[k:210] + diff(MRO)[k:210] , data=df)
summary(reg)
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(5,0,0))
#mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
acf(reg$residuals)
pacf(reg$residuals)
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(2,0,0))
#mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
coeftest(mod3)
1 - mod3$sigma2/var(df$EURUSD_vol)
acf(mod3$residuals[2:210])
mod3$residuals
acf(mod3$residuals)
pacf(mod3$residuals)
1 - mod3$sigma2/var(df$EURUSD_vol)
mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
coeftest(mod3)
1 - mod3$sigma2/var(df$EURUSD_vol)
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(2,0,0))
mod3
coeftest(mod3)
regvix = lm(EURUSD_vol~ vix, data=df)
summary(regvix)
reg = dynlm( regvix$residuals[2:210] ~ + diff(MRO) + diff(ExtRes) + diff(M3), data=df)
summary(reg)
reg = dynlm( EURUSD_vol[2:210] ~ vix[2:210] + diff(MRO) + diff(ExtRes) + diff(M3), data=df)
summary(reg)
acf(reg$residuals)
pacf(reg$residuals)
#Se filtriamo la crisi del 2008, vediamo assenza di correlazione tra variazione di money supply, rieserve esterne e MRO
#mentre la correlazione con il vix rimane significativa
k=1
reg = dynlm( EURUSD_vol[k:210] ~ vix[k:210] + diff(MRO)[k:210] , data=df)
summary(reg)
acf(reg$residuals)
pacf(reg$residuals)
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(4,0,0))
mod3
coeftest(mod3)
1 - mod3$sigma2/var(df$EURUSD_vol)
acf(mod3$residuals)
pacf(mod3$residuals)
mod3$residuals
acf(mod3$residuals[2:210])
pacf(mod3$residuals[2:210])
mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(4,0,0))
mod3
mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]))
mod3
coeftest(mod3)
1 - mod3$sigma2/var(df$EURUSD_vol)
acf(mod3$residuals[2:210])
pacf(mod3$residuals[2:210])
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(4,0,0))
mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
coeftest(mod3)
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(4,0,0))
#mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
coeftest(mod3)
1 - mod3$sigma2/var(df$EURUSD_vol)
#external regressor MRO
mod1 = auto.arima(df$EURUSD_vol[2:length(df$EURUSD_vol)], xreg = as.matrix(diff(df$MRO)), d=0)
mod1
1-mod1$sigma2/var(df$EURUSD_vol) #R^2
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(4,0,0))
#mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
coeftest(mod3)
reg = dynlm( EURUSD_vol[k:210] ~ vix[k:210] + diff(MRO)[k:210] , data=df)
summary(reg)
acf(reg$residuals)
pacf(reg$residuals)
coeftest(mod3)
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(5,0,0))
#mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
coeftest(mod3)
1 - mod3$sigma2/var(df$EURUSD_vol)
acf(mod3$residuals[2:210])
pacf(mod3$residuals[2:210])
#mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
acf(reg$residuals)
pacf(reg$residuals)
x11()
acf(reg$residuals)
pacf(reg$residuals)
1 - mod3$sigma2/var(df$EURUSD_vol)
1-mod1$sigma2/var(df$EURUSD_vol) #R^2
coeftest(mod3)
1 - mod3$sigma2/var(df$EURUSD_vol)
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(1,0,2))
#mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
coeftest(mod3)
1 - mod3$sigma2/var(df$EURUSD_vol)
acf(mod3$residuals[2:210])
pacf(mod3$residuals[2:210])
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(5,0,0))
#mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]), d=0)
mod3
coeftest(mod3)
1 - mod3$sigma2/var(df$EURUSD_vol)
mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]))
mod3
coeftest(mod3)
1 - mod3$sigma2/var(df$EURUSD_vol)
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(5,0,0))
mod3
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dMRO")]), order=c(5,0,0))
1 - mod3$sigma2/var(df$EURUSD_vol)
plot(df$dMRO)
plot(df$dMRO, type='l')
reg = dynlm( EURUSD_vol[k:210] ~ vix[k:210] + diff(MRO)[k:210] , data=df)
summary(reg)
#external regressor dummy MRO
mod2 = auto.arima(df$EURUSD_vol[2:length(df$EURUSD_vol)], xreg = as.matrix(dummy), d=0)
mod2
1-mod2$sigma2/var(df$EURUSD_vol) #R^2
#external regressor MRO
mod1 = auto.arima(df$EURUSD_vol[2:length(df$EURUSD_vol)], xreg = as.matrix(diff(df$MRO)), d=0)
mod1
1-mod1$sigma2/var(df$EURUSD_vol) #R^2
#external regressor dummy MRO
mod2 = auto.arima(df$EURUSD_vol[2:length(df$EURUSD_vol)], xreg = as.matrix(dummy), d=0)
mod2
#c'è tanta autocorrelazione, meglio tenerne conto e usare un modello ARMA
df$dummy_MRO = c(NA,as.numeric(as.logical(diff$MRO)))
c(NA,as.numeric(as.logical(diff$MRO)))
as.logical(diff$MRO))
as.logical(diff$MRO))
as.logical(diff$MRO)
#c'è tanta autocorrelazione, meglio tenerne conto e usare un modello ARMA
df$dummy_MRO = c(NA,as.numeric(as.logical(diff(df$MRO))))
reg = dynlm( EURUSD_vol[k:210] ~ vix[k:210] + dummy_MRO[k:210] , data=df)
summary(reg)
acf(reg$residuals)
pacf(reg$residuals)
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dummy_MRO")]), order=c(5,0,0))
#fittiamo un modello ARMA con le variabili significative
k=2
k=2
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dummy_MRO")]), order=c(5,0,0))
#mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]))
mod3
coeftest(mod3)
1 - mod3$sigma2/var(df$EURUSD_vol)
#external regressor dummy MRO
mod2 = auto.arima(df$EURUSD_vol[2:length(df$EURUSD_vol)], xreg = as.matrix(df[2:210,c("dummy_MRO")]), d=0)
mod2
1-mod2$sigma2/var(df$EURUSD_vol) #R^2
acf(mod2$residuals)
pacf(mod2$residuals)
#fittiamo un modello ARMA con le variabili significative
k=1
reg = dynlm( EURUSD_vol[k:210] ~ vix[k:210] + dummy_MRO[k:210] , data=df)
summary(reg)
k=2
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dummy_MRO")]), order=c(5,0,0))
#mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]))
mod3
#external regressor dummy MRO
mod2 = auto.arima(df$EURUSD_vol[2:length(df$EURUSD_vol)], xreg = as.matrix(df[2:210,c("dummy_MRO")]), d=0)
mod2
#external regressor dummy MRO
mod2 = auto.arima(df$EURUSD_vol[2:length(df$EURUSD_vol)], xreg = as.matrix(df[2:210,c("dummy_MRO")]), d=0)
mod2
1-mod2$sigma2/var(df$EURUSD_vol) #R^2
acf(mod2$residuals)
pacf(mod2$residuals)
#external regressor
coeftest(mod2)
1-mod2$sigma2/var(df$EURUSD_vol) #R^2
k=1
reg = dynlm( EURUSD_vol[k:210] ~ vix[k:210] + dummy_MRO[k:210] , data=df)
summary(reg)
k=2
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dummy_MRO")]), order=c(5,0,0))
#mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]))
mod3
coeftest(mod3)
1 - mod3$sigma2/var(df$EURUSD_vol)
acf(mod3$residuals[2:210])
mod3$residuals
acf(mod3$residuals[2:210])
acf(mod3$residuals)
pacf(mod3$residuals)
reg = dynlm( EURUSD_vol[k:210] ~ vix[k:210] + dummy_MRO[k:210] , data=df)
summary(reg)
acf(reg$residuals)
pacf(reg$residuals)
1 - mod3$sigma2/var(df$EURUSD_vol)
mod3 = Arima(df$EURUSD_vol[k:210], xreg= as.matrix(df[k:210, c( "vix", "dummy_MRO")]), order=c(5,0,0))
#mod3 = auto.arima(df$EURUSD_vol[k:210], xreg = as.matrix(df[k:210, c( "vix", "dMRO")]))
mod3
coeftest(mod3)
1 - mod3$sigma2/var(df$EURUSD_vol)
mod3$sigma2
mod0 = auto.arima(df$EURUSD_vol[2:length(df$EURUSD_vol)], d=0)
mod0
1-mod0$sigma2/var(df$EURUSD_vol) #R^2
mod0 = auto.arima(df$EURUSD_vol[2:length(df$EURUSD_vol)], d=0)
mod0
1-mod0$sigma2/var(df$EURUSD_vol) #R^2
#external regressor dummy MRO
mod2 = auto.arima(df$EURUSD_vol[2:length(df$EURUSD_vol)], xreg = as.matrix(df[2:210,c("dummy_MRO")]), d=0)
mod2
1-mod2$sigma2/var(df$EURUSD_vol) #R^2
#external regressor
coeftest(mod2)
ecb_action = c(as.numeric( as.logical(diff(df$MRO))))
#external_data = cbind(ecb_action, ecb_action.l1, ecb_action.l2, ecb_action.l3)
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1), external.regressors = as.matrix(ecb_action)),
distribution.model="std", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res[1:length(res)])
length(res)
#external_data = cbind(ecb_action, ecb_action.l1, ecb_action.l2, ecb_action.l3)
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1), external.regressors = as.matrix(ecb_action[2:209])),
distribution.model="std", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
#with external reserve
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1), external.regressors = as.matrix(df$dExtRes[2:209])),
distribution.model="std", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
#with external reserve
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1), external.regressors = as.matrix(df$dExtRes[2:209, c("dExtres", "dMRO", "dM3")])),
distribution.model="std", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
#with external reserve
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1), external.regressors = as.matrix(df[2:209, c("dExtRes", "dMRO", "dM3")])),
distribution.model="std", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
#external_data = cbind(ecb_action, ecb_action.l1, ecb_action.l2, ecb_action.l3)
#with MRO
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1), external.regressors = as.matrix(ecb_action[2:209])),
distribution.model="std", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
#with external reserve
spec = ugarchspec(variance.model=list(model = "iGARCH", garchOrder = c(1,1), external.regressors = as.matrix(df[2:209, c("dExtRes", "dMRO", "dM3")])),
distribution.model="std", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
#with external reserve
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1), external.regressors = as.matrix(df[2:209, c("dExtRes", "dMRO", "dM3")])),
distribution.model="std", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
#with external reserve
spec = ugarchspec(variance.model=list(model = "iGARCH", garchOrder = c(1,1), external.regressors = as.matrix(df[2:209, c("dExtRes", "dMRO", "dM3")])),
distribution.model="std", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
hist(res)
density(res)
plot(density(res))
shapiro.test(res)
#with external reserve
spec = ugarchspec(variance.model=list(model = "iGARCH", garchOrder = c(1,1), external.regressors = as.matrix(df[2:209, c("dExtRes", "dMRO", "dM3")])),
distribution.model="norm", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
#with external reserve
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1), external.regressors = as.matrix(df[2:209, c("dExtRes", "dMRO", "dM3")])),
distribution.model="norm", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
fit@fit$coef
#with external reserve
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(0,1), include.mean=FALSE, external.regressors = as.matrix(df[2:209, c("dExtRes", "dMRO", "dM3")])),
distribution.model="norm", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
#with external reserve
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(0,1), external.regressors = as.matrix(df[2:209, c("dExtRes", "dMRO", "dM3")])),
distribution.model="norm", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
fit@fit$coef
#with external reserve
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1), external.regressors = as.matrix(df[2:209, c("dExtRes", "dMRO", "dM3")])),
distribution.model="norm", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
fit@fit$coef
plot(fit@fit$var)
plot(fit@fit$var, type="l")
#external_data = cbind(ecb_action, ecb_action.l1, ecb_action.l2, ecb_action.l3)
#with MRO
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1), external.regressors = as.matrix(ecb_action[2:209])),
distribution.model="std", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
#final model for the conditional variance
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1)),
distribution.model="std", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
#final model for the conditional variance
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1)),
distribution.model="norm", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
plot(fit@fit$var, type="l")
res
#mod_arch = dynlm(res_adj_sq ~ L(res_adj_sq) + L(res_adj_sq, 2))
res_ts = ts(res)
mod_arch = dynlm(res_ts ~ L(res_ts^2,1) + L(res_ts^2, 2))
summary(mod_arch)
ArchTest(res, lag = 2, demean = TRUE) # con un lag non viene significativo, boh
library(FinTS)
ArchTest(res, lag = 2, demean = TRUE) # con un lag non viene significativo, boh
help("ArchTest")
plot(res^2, type='l')
x11()
plot(df$Data[3:210],res^2, type='l')
x11()
plot(df$Data[3:210],res^2, type='l', xlab="date", ylab=" ", main="squared VECM residuals")
plot(df$Data[2:210], fit@fit$var, type="l")
plot(df$Data[3:210], fit@fit$var, type="l")
lines(res^2, col='red')
length(res)
x11()
plot(df$Data[3:210], fit@fit$var, type="l")
lines(df$Data[3:210], res^2, col='red')
plot(df$Data[3:210], res^2, type="l")
lines(df$Data[3:210], fit@fit$var, col='red')
x11()
plot(df$Data[3:210], res^2, type="l")
lines(df$Data[3:210], fit@fit$var, col='red')
#final model for the conditional variance
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1)),
distribution.model="std", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
x11()
plot(df$Data[3:210], res^2, type="l")
lines(df$Data[3:210], fit@fit$var, col='red')
#final model for the conditional variance
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1)),
distribution.model="norm", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
x11()
plot(df$Data[3:210], res^2, type="l")
lines(df$Data[3:210], fit@fit$var, col='red')
x11()
plot(df$Data[3:210], res^2, type="l", xlab="Date", ylab=" ", "square residuals and fitted variance of GARCH(1,1) model")
lines(df$Data[3:210], fit@fit$var, col='red')
x11()
plot(df$Data[3:210], res^2, type="l", xlab="Date", ylab=" ", main="square residuals and fitted variance of GARCH(1,1) model")
lines(df$Data[3:210], fit@fit$var, col='red')
#final model for the conditional variance
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1)),
distribution.model="gev", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
help("rugarch")
#final model for the conditional variance
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1)),
distribution.model="ged", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
x11()
plot(df$Data[3:210], res^2, type="l", xlab="Date", ylab=" ", main="square residuals and fitted variance of GARCH(1,1) model")
lines(df$Data[3:210], fit@fit$var, col='red')
#final model for the conditional variance
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1)),
distribution.model="sstd", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
x11()
plot(df$Data[3:210], res^2, type="l", xlab="Date", ylab=" ", main="square residuals and fitted variance of GARCH(1,1) model")
lines(df$Data[3:210], fit@fit$var, col='red')
#final model for the conditional variance
spec = ugarchspec(variance.model=list(model = "sGARCH", garchOrder = c(1,1)),
distribution.model="sged", mean.model=list(armaOrder=c(0,0), include.mean = FALSE))
fit = ugarchfit(spec=spec, data=res)
fit
x11()
plot(df$Data[3:210], res^2, type="l", xlab="Date", ylab=" ", main="square residuals and fitted variance of GARCH(1,1) model")
lines(df$Data[3:210], fit@fit$var, col='red')
y.CA <- ca.jo(df[c("EURUSD", "M3", "yieldEU_1y", "HICP", "ExtRes",
"yieldUSA_1y", "Petrol_USA", "inf_USA")],
type="trace", ecdet = "const", spec="longrun", K=2)
summary(y.CA)
vecm<-cajorls(y.CA, r = 2)
vecm
summary(vecm$rlm)
y.VAR.IC <- VARselect(df[c("EURUSD", "M3", "yield_diff", "HICP",
"ExtRes", "Petrol_USA", "inf_USA")], type="const")
nlags <- y.VAR.IC$selection
nlags
y.CA <- ca.jo(df[c("EURUSD", "M3", "yield_diff", "HICP",
"ExtRes", "Petrol_USA", "inf_USA")],
type="trace", ecdet = "const", spec="longrun", K=2)
summary(y.CA)
vecm<-cajorls(y.CA, r = 1)
# Let's see the cointegration relationship
vecm
summary(vecm$rlm)
